/*
 * Copyright (C) 2017 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'jacoco'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-allopen'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'

/*
allOpen {
    // allows mocking for classes w/o directly opening them for release builds
    annotation 'com.android.example.github.testing.OpenClass'
}
*/
android {
    flavorDimensions 'default'
    compileSdkVersion build_versions.target_sdk
    buildToolsVersion build_versions.build_tools
    defaultConfig {
        applicationId "com.yago.gas"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0"
        //testInstrumentationRunner "com.android.example.github.util.GithubTestRunner"
    }
    buildTypes {
        debug {
            //testCoverageEnabled !project.hasProperty('android.injected.invoked.from.ide')
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        androidTest.java.srcDirs += "src/test-common/java"
        test.java.srcDirs += "src/test-common/java"
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    // Add for using latest experimental build of Android Extensions
    androidExtensions {
        experimental = true
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

}

jacoco {
    toolVersion = "0.7.4+"
}

dependencies {
    implementation deps.support.app_compat
    implementation deps.support.recyclerview
    implementation deps.support.cardview
    implementation deps.support.design
    implementation deps.support.core_ktx
    implementation deps.navigation.fragment_ktx
    implementation deps.navigation.ui_ktx
    implementation deps.room.runtime
    implementation deps.lifecycle.runtime
    implementation deps.lifecycle.extensions
    implementation deps.lifecycle.java8
    implementation deps.retrofit.runtime
    implementation deps.retrofit.gson
    implementation deps.retrofit.scalars
    implementation deps.glide.runtime

    implementation deps.dagger.runtime
    implementation deps.dagger.android
    implementation deps.dagger.android_support
    implementation deps.constraint_layout
    implementation deps.kotlin.stdlib

    implementation deps.androidkeystore.core

    implementation deps.jwt.core

    // Moshi JSON Mapper
    implementation 'com.squareup.moshi:moshi:1.8.0'
    implementation 'com.google.android.gms:play-services-maps:18.0.2'
    kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.8.0'

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1'

    // Anko
    implementation "org.jetbrains.anko:anko:0.10.8"

    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.0-alpha04'
    implementation 'androidx.navigation:navigation-ui-ktx:2.4.0-alpha04'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'

    implementation 'com.google.maps.android:android-maps-utils:2.2.3'
    implementation 'com.google.android.gms:play-services-location:19.0.1'

    implementation "com.airbnb.android:lottie:3.4.0"

    kapt deps.dagger.android_support_compiler
    kapt deps.dagger.compiler
    kapt deps.room.compiler
    kapt deps.lifecycle.compiler

    androidTestImplementation deps.atsl.runner
    androidTestImplementation deps.atsl.rules

    androidTestImplementation deps.support.app_compat
    androidTestImplementation deps.support.recyclerview
    androidTestImplementation deps.support.cardview
    androidTestImplementation deps.support.design

    // Add missing dependencies for JDK 9+
    if (JavaVersion.current().ordinal() >= JavaVersion.VERSION_1_9.ordinal()) {
        // If you're using @AutoValue or any libs that requires javax.annotation (like Dagger)
        compileOnly 'com.github.pengrad:jdk9-deps:1.0'
        compileOnly 'javax.annotation:javax.annotation-api:1.3.2'

        // If you're using Kotlin
        kapt "com.sun.xml.bind:jaxb-core:2.3.0.1"
        kapt "javax.xml.bind:jaxb-api:2.3.1"
        kapt "com.sun.xml.bind:jaxb-impl:2.3.2"

        // If you're using Java
        annotationProcessor "com.sun.xml.bind:jaxb-core:2.3.0.1"
        annotationProcessor "javax.xml.bind:jaxb-api:2.3.1"

        testAnnotationProcessor "com.sun.xml.bind:jaxb-core:2.3.0.1"
        testAnnotationProcessor "javax.xml.bind:jaxb-api:2.3.1"
    }


}

// we need all open to run tests which  a we enable only for debug builds.
project.tasks.whenTaskAdded {
    if (it.name == "testReleaseUnitTest") {
        it.enabled = false
    }
}
